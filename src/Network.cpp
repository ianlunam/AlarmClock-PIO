#include <Arduino.h>

#include <WiFi.h>
#include "Network.h"

TFT_eSprite *wifiSprite;

// array size is 385
const unsigned char wifi[] PROGMEM  = {
  0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x08, 0x06, 0x00, 0x00, 0x00, 0xe0, 0x77, 0x3d,
  0xf8, 0x00, 0x00, 0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0xa0,
  0xbd, 0xa7, 0x93, 0x00, 0x00, 0x01, 0x36, 0x49, 0x44, 0x41, 0x54, 0x48, 0x89, 0xed, 0xd4, 0xbd,
  0x4a, 0x03, 0x51, 0x10, 0x86, 0xe1, 0x47, 0x11, 0x02, 0x8a, 0x9d, 0x58, 0x18, 0xd1, 0x26, 0x5d,
  0x04, 0x7b, 0x4d, 0xa1, 0xe0, 0x25, 0xc4, 0xc2, 0xca, 0xdc, 0x81, 0x8d, 0x7a, 0x01, 0x7a, 0x23,
  0x36, 0x6a, 0x67, 0x23, 0xd8, 0x28, 0x68, 0x61, 0x65, 0x2b, 0x0a, 0x96, 0x16, 0x06, 0x04, 0x0b,
  0x0b, 0x83, 0x10, 0xf1, 0xa7, 0xd8, 0x89, 0x3f, 0xcb, 0xc6, 0x6c, 0x60, 0x0b, 0x0b, 0x3f, 0x98,
  0xe6, 0xcc, 0xcc, 0x3b, 0xe7, 0xec, 0xf9, 0xf6, 0xf0, 0xaf, 0x1e, 0x1a, 0xf8, 0x25, 0x37, 0x8d,
  0x05, 0x2c, 0xa2, 0x8a, 0x71, 0x8c, 0x45, 0xee, 0x01, 0xf7, 0xb8, 0xc6, 0x29, 0xce, 0x70, 0x9b,
  0x67, 0xe0, 0x20, 0x96, 0x70, 0x88, 0x37, 0xbc, 0xf7, 0x11, 0xe7, 0x58, 0xc6, 0x50, 0x37, 0x78,
  0x2d, 0x76, 0xd4, 0x0f, 0x34, 0x2b, 0xae, 0x30, 0x9f, 0x86, 0x6f, 0xe2, 0x35, 0x55, 0xd8, 0xc6,
  0x11, 0xd6, 0x31, 0x87, 0x29, 0x0c, 0x47, 0x4c, 0x05, 0x64, 0x23, 0x6a, 0xda, 0xa9, 0xde, 0xd7,
  0x60, 0x7e, 0xaa, 0x8a, 0xa7, 0x48, 0x3e, 0x62, 0x0b, 0x13, 0xdd, 0x8e, 0x9a, 0xa1, 0x09, 0x6c,
  0x47, 0xef, 0x7b, 0xb0, 0xaa, 0xe9, 0xa2, 0x06, 0x0e, 0xfa, 0x04, 0x67, 0x0d, 0x3a, 0x08, 0x16,
  0x7e, 0x77, 0x11, 0x4c, 0x62, 0x45, 0xe2, 0xa6, 0x19, 0x3f, 0x5d, 0x74, 0x29, 0x71, 0xcf, 0x3e,
  0xee, 0xfa, 0xdd, 0x49, 0x19, 0xbb, 0x78, 0xd1, 0xfb, 0x52, 0xdb, 0x51, 0x5b, 0xce, 0x0b, 0x1f,
  0x46, 0x33, 0x07, 0x38, 0x1d, 0xcd, 0xe8, 0xcd, 0xa5, 0xd5, 0x68, 0x7a, 0xc3, 0xb1, 0xe4, 0x9b,
  0x56, 0x7c, 0xb9, 0xa8, 0x12, 0x6b, 0x27, 0xbe, 0xfe, 0x97, 0xd5, 0xbc, 0xf0, 0x8e, 0xb6, 0x64,
  0xf8, 0x39, 0x43, 0xb5, 0xa8, 0xfd, 0xbb, 0x2a, 0x61, 0x0d, 0x17, 0x68, 0x45, 0x5c, 0xc4, 0x5a,
  0xa9, 0x88, 0x01, 0x75, 0xdd, 0x2f, 0xb6, 0x5e, 0xc4, 0x00, 0xd8, 0xc9, 0x80, 0xef, 0x15, 0x05,
  0x87, 0x11, 0xc9, 0x23, 0xd6, 0x81, 0xdf, 0x60, 0xb4, 0xc8, 0x01, 0x24, 0x6f, 0x4b, 0x0b, 0xcf,
  0x98, 0x2d, 0x1a, 0xde, 0x51, 0xc3, 0xb7, 0x77, 0xe6, 0x5f, 0x85, 0xe8, 0x03, 0xa3, 0xf9, 0x7b,
  0xd0, 0x1b, 0xe5, 0xe3, 0x7d, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
  0x82
};

// array size is 428
const unsigned char wifi_off[] PROGMEM  = {
  0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x08, 0x06, 0x00, 0x00, 0x00, 0xe0, 0x77, 0x3d,
  0xf8, 0x00, 0x00, 0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0xa0,
  0xbd, 0xa7, 0x93, 0x00, 0x00, 0x01, 0x61, 0x49, 0x44, 0x41, 0x54, 0x48, 0x89, 0xed, 0xd5, 0x3d,
  0x4b, 0x1c, 0x51, 0x14, 0xc6, 0xf1, 0xdf, 0xa2, 0x60, 0x66, 0xb5, 0x54, 0xe2, 0x1b, 0x16, 0x16,
  0x36, 0xf9, 0x06, 0x31, 0xa4, 0x48, 0x62, 0x1f, 0xb0, 0xb0, 0x74, 0x0b, 0xed, 0x2d, 0x34, 0x85,
  0xe5, 0xfa, 0x45, 0x42, 0x82, 0x48, 0x8a, 0x08, 0xc9, 0x26, 0x45, 0x22, 0x31, 0xea, 0x37, 0xb0,
  0x50, 0xb0, 0x14, 0x41, 0x10, 0x04, 0x15, 0x56, 0x41, 0x82, 0x2f, 0xc5, 0xdc, 0x35, 0x93, 0xd9,
  0x61, 0x77, 0x27, 0x6e, 0xb9, 0x0f, 0x5c, 0x66, 0x38, 0x73, 0xef, 0xf3, 0x1f, 0xce, 0x39, 0x73,
  0x86, 0x8e, 0x9a, 0xa8, 0x10, 0xae, 0xaf, 0xb1, 0x80, 0x19, 0x5c, 0x85, 0xd8, 0x20, 0xde, 0x60,
  0x0a, 0x13, 0x78, 0x1a, 0x16, 0x9c, 0xe2, 0x04, 0xfb, 0xf8, 0x8d, 0x2d, 0x1c, 0x36, 0x02, 0x7d,
  0xc5, 0x1d, 0x7e, 0xa1, 0x18, 0xc0, 0x6b, 0x21, 0xd6, 0xea, 0xda, 0xc4, 0x5b, 0x74, 0x65, 0x01,
  0x22, 0xec, 0xa6, 0x20, 0xdd, 0xf8, 0x94, 0x13, 0x72, 0x87, 0x3d, 0x4c, 0xa6, 0x01, 0xcb, 0xb8,
  0x4d, 0x6c, 0x4a, 0x42, 0x4a, 0x78, 0x11, 0x52, 0xf6, 0x24, 0xc4, 0xc7, 0xf0, 0x1c, 0x8b, 0xf8,
  0x8e, 0xeb, 0x14, 0xe4, 0x06, 0xef, 0x92, 0x80, 0x67, 0xa8, 0x26, 0x1e, 0x26, 0x21, 0xad, 0x68,
  0x08, 0x65, 0x9c, 0x87, 0xb3, 0xd5, 0xe0, 0xf9, 0x8f, 0x4a, 0xf8, 0x8c, 0x71, 0x6c, 0xfc, 0x07,
  0x04, 0x86, 0xb1, 0x1e, 0xbc, 0x1a, 0x2a, 0xca, 0x80, 0x14, 0xf0, 0x11, 0x97, 0xe2, 0x8e, 0xf9,
  0x86, 0x25, 0x8c, 0xe6, 0x78, 0x81, 0x07, 0x0d, 0xe0, 0x83, 0xec, 0x9a, 0xa4, 0x0b, 0xff, 0x07,
  0xab, 0x18, 0x69, 0xd5, 0xbc, 0x88, 0x23, 0xf5, 0xdd, 0xd1, 0xac, 0xbb, 0x8e, 0xe5, 0x48, 0xe7,
  0x6c, 0xe2, 0xe0, 0x36, 0x76, 0x32, 0x20, 0xf3, 0xe2, 0xde, 0xaf, 0xed, 0x9b, 0x6d, 0xd5, 0xbc,
  0xa6, 0x32, 0x5e, 0x86, 0xfb, 0x08, 0x3f, 0x64, 0x17, 0xfe, 0x15, 0x56, 0xf2, 0x9a, 0x67, 0xa9,
  0x07, 0x95, 0x00, 0xd9, 0x41, 0x5f, 0x3b, 0x4c, 0x89, 0xd3, 0x31, 0x27, 0x9e, 0x39, 0x17, 0xea,
  0x6b, 0xf2, 0x68, 0x4d, 0xab, 0x2f, 0x68, 0xdb, 0x21, 0xef, 0x33, 0xcc, 0xcf, 0xda, 0x09, 0xe9,
  0x15, 0x0f, 0xb1, 0x9a, 0xf9, 0x01, 0xfa, 0xc5, 0x1f, 0x5b, 0xdb, 0x6a, 0x52, 0x9b, 0x57, 0x97,
  0xfe, 0xce, 0x99, 0x08, 0x3f, 0x03, 0xa4, 0xf2, 0x58, 0x00, 0xf1, 0x8c, 0x29, 0xa5, 0x62, 0x11,
  0xbe, 0x88, 0x7f, 0x4e, 0x1d, 0xe5, 0xd7, 0x3d, 0x66, 0x53, 0x8a, 0xfd, 0xdc, 0x8a, 0x9c, 0x5e,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

Network::Network() {}

void restart(WiFiEvent_t event, WiFiEventInfo_t info)
{

    wifiSprite->drawBitmap(0, 0, wifi_off, 25, 25, (TEXT_R << (5 + 6)) | (TEXT_G << 5) | TEXT_B);
    wifiSprite->pushSprite(250, 0);
    Serial.println("Reconnecting to WiFi...");
    WiFi.disconnect();
    WiFi.reconnect();

    while (WiFi.status() != WL_CONNECTED)
    {
        delay(500);
        Serial.print(".");
    }
    Serial.println("\nWiFi connected.");
    configTzTime(TIMEZONE, NTP_SERVER);
    wifiSprite->drawBitmap(0, 0, wifi, 25, 25, (TEXT_R << (5 + 6)) | (TEXT_G << 5) | TEXT_B);
    wifiSprite->pushSprite(250, 0);
}

void started(WiFiEvent_t event, WiFiEventInfo_t info)
{
    Serial.println("WiFi Up");
    wifiSprite->drawBitmap(0, 0, wifi, 25, 25, (TEXT_R << (5 + 6)) | (TEXT_G << 5) | TEXT_B);
    wifiSprite->pushSprite(250, 0);
}

void Network::start(Display &display)
{

    TFT_eSPI tft = display.get_tft();
    wifiSprite = new TFT_eSprite(&tft);

    wifiSprite->createSprite(25, 25);
    wifiSprite->setColorDepth(8);
    wifiSprite->fillSprite(BACKGROUND_COLOUR);
    wifiSprite->drawBitmap(0, 0, wifi_off, 25, 25, (TEXT_R << (5 + 6)) | (TEXT_G << 5) | TEXT_B);
    wifiSprite->pushSprite(300, 0);
    WiFi.onEvent(restart, ARDUINO_EVENT_WIFI_STA_DISCONNECTED);
    WiFi.onEvent(started, ARDUINO_EVENT_WIFI_STA_CONNECTED);

    WiFi.begin(WIFI_SSID, WIFI_PWD);
    while (WiFi.status() != WL_CONNECTED)
    {
        delay(500);
        Serial.print(".");
    }
    wifiSprite->drawBitmap(0, 0, wifi, 25, 25, (TEXT_R << (5 + 6)) | (TEXT_G << 5) | TEXT_B);
    wifiSprite->pushSprite(300, 0);
    Serial.println("\nWiFi connected.");
    configTzTime(TIMEZONE, NTP_SERVER);
}
